{"ast":null,"code":"var _jsxFileName = \"/Users/suzitpaudel/Desktop/Movieapp/src/Test.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport React from \"react\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { moviedetailsreducers } from \"./reducers/moviereducers\";\nimport { loadDetails } from \"./actions\";\nimport Details from \"./Details\";\nimport Details2 from \"./Details2\";\nimport { Typography } from \"@mui/material\";\nimport { useStyles } from \"./Style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Test = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch(); // console.log(id)\n\n  const post = useSelector(state => state.moviedetailsreducers); // const{Title,Genre}=post;\n  // const fetchDetails = async() =>{\n  //     const response = await axios.get(`https://www.omdbapi.com/?i=${id}&apikey=900505d8`).catch(err =>{\n  //         console.log(\"Err\", err);\n  //     })\n\n  const url = `https://www.omdbapi.com/?i=${id}&apikey=900505d8`; // const urll = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const res = await fetch(url);\n        const data = await res.json();\n        console.log(data);\n        dispatch(loadDetails(data));\n      } catch (err) {\n        console.error(err); // alert('No Movies Found')\n      }\n    }\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        style: {\n          textDecoration: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          color: \"red\",\n          children: \"NEPFLIX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        color: \"red\",\n        children: \"NEPFLIX\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Details2, {\n      title: post.Title,\n      genre: post.Genre,\n      released: post.Released,\n      actors: post.Actors,\n      image: post.Poster,\n      plot: post.Plot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: classes.footer,\n      style: {\n        marginTop: '41px'\n      },\n      children: \"All Rights Reserved @2021\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Test, \"3wCgfojDresUUweJCkbpU29yYu8=\", false, function () {\n  return [useStyles, useParams, useDispatch, useSelector];\n});\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/suzitpaudel/Desktop/Movieapp/src/Test.js"],"names":["axios","useEffect","React","NavLink","useParams","useDispatch","useSelector","moviedetailsreducers","loadDetails","Details","Details2","Typography","useStyles","Test","classes","id","dispatch","post","state","url","fetchData","res","fetch","data","json","console","log","err","error","display","textDecoration","Title","Genre","Released","Actors","Poster","Plot","footer","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,kBAAnC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,oBAAT,QAAqC,0BAArC;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,SAAT,QAA0B,SAA1B;;;;AAGA,MAAMC,IAAI,GAAG,MAAI;AAAA;;AAEjB,QAAMC,OAAO,GAAGF,SAAS,EAAzB;AACI,QAAM;AAACG,IAAAA;AAAD,MAAOX,SAAS,EAAtB;AACA,QAAMY,QAAQ,GAAGX,WAAW,EAA5B,CAJa,CAKb;;AACA,QAAMY,IAAI,GAAGX,WAAW,CAAEY,KAAD,IAASA,KAAK,CAACX,oBAAhB,CAAxB,CANa,CAQb;AAEA;AACA;AACA;AACA;;AAGA,QAAMY,GAAG,GAAI,8BAA6BJ,EAAG,kBAA7C,CAhBa,CAkBb;;AAEAd,EAAAA,SAAS,CAAE,MAAM;AACb,mBAAemB,SAAf,GAA2B;AAEvB,UAAG;AAGC,cAAMC,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAD,CAAvB;AACA,cAAMI,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAGAP,QAAAA,QAAQ,CAACR,WAAW,CAACe,IAAD,CAAZ,CAAR;AAEC,OAVL,CAWA,OAAMI,GAAN,EAAU;AACNF,QAAAA,OAAO,CAACG,KAAR,CAAcD,GAAd,EADM,CAEN;AACH;AAGJ;;AACDP,IAAAA,SAAS;AACZ,GAtBQ,EAsBN,EAtBM,CAAT;AA4BA,sBACI;AAAA,4BACR;AAAK,MAAA,KAAK,EAAE;AAACS,QAAAA,OAAO,EAAG;AAAX,OAAZ;AAAA,mCAAiC,QAAC,OAAD;AAAS,QAAA,EAAE,EAAG,GAAd;AAAkB,QAAA,KAAK,EAAE;AAACC,UAAAA,cAAc,EAAG;AAAlB,SAAzB;AAAA,+BAC/B,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAA0B,UAAA,KAAK,EAAE,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAD+B;AAAA;AAAA;AAAA;AAAA,cAAjC,eAKE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAA0B,QAAA,KAAK,EAAE,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,eAUA,QAAC,QAAD;AACA,MAAA,KAAK,EAAGb,IAAI,CAACc,KADb;AAEA,MAAA,KAAK,EAAEd,IAAI,CAACe,KAFZ;AAGA,MAAA,QAAQ,EAAGf,IAAI,CAACgB,QAHhB;AAIA,MAAA,MAAM,EAAEhB,IAAI,CAACiB,MAJb;AAKA,MAAA,KAAK,EAAEjB,IAAI,CAACkB,MALZ;AAMA,MAAA,IAAI,EAAIlB,IAAI,CAACmB;AANb;AAAA;AAAA;AAAA;AAAA,YAVA,eAqBR;AAAQ,MAAA,SAAS,EAAItB,OAAO,CAACuB,MAA7B;AAAqC,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAG;AAAb,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBQ;AAAA,kBADJ;AAyBH,CAzED;;GAAMzB,I;UAEUD,S,EACCR,S,EACIC,W,EAEJC,W;;;KANXO,I;AA2EN,eAAeA,IAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport React from \"react\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { moviedetailsreducers } from \"./reducers/moviereducers\";\nimport { loadDetails } from \"./actions\";\nimport Details from \"./Details\";\nimport Details2 from \"./Details2\";\nimport { Typography } from \"@mui/material\";\nimport { useStyles } from \"./Style\";\n\n\nconst Test = ()=>{\n\nconst classes = useStyles();\n    const {id} = useParams();\n    const dispatch = useDispatch();\n    // console.log(id)\n    const post = useSelector((state)=>state.moviedetailsreducers);\n\n    // const{Title,Genre}=post;\n\n    // const fetchDetails = async() =>{\n    //     const response = await axios.get(`https://www.omdbapi.com/?i=${id}&apikey=900505d8`).catch(err =>{\n    //         console.log(\"Err\", err);\n    //     })\n\n\n    const url = `https://www.omdbapi.com/?i=${id}&apikey=900505d8`\n\n    // const urll = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    useEffect( () => { \n        async function fetchData() {\n\n            try{\n\n    \n                const res = await fetch(url);\n                const data = await res.json();\n                console.log(data);\n                \n            \n                dispatch(loadDetails(data))\n               \n                }\n            catch(err){\n                console.error(err);\n                // alert('No Movies Found')\n            }\n            \n            \n        }\n        fetchData();\n    }, []);\n\n\n\n    \n \n    return(\n        <>\n<div style={{display : 'flex'}}> <NavLink to = \"/\" style={{textDecoration : 'none'}}>\n  <Typography variant=\"h2\"  color =\"red\">\n    NEPFLIX\n    \n  </Typography></NavLink>\n  <Typography variant=\"h2\"  color =\"red\">\n    NEPFLIX\n  </Typography></div>\n  \n        <Details2\n        title ={post.Title}\n        genre={post.Genre}\n        released ={post.Released}\n        actors={post.Actors}\n        image={post.Poster}\n        plot = {post.Plot}\n\n\n        />\n\n<footer className = {classes.footer} style={{marginTop : '41px'}}>All Rights Reserved @2021</footer>\n        </>\n    );\n}\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}