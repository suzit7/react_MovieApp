{"ast":null,"code":"var _jsxFileName = \"/Users/suzitpaudel/Desktop/Movieapp/src/Ratingdatabase.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { useParams } from 'react-router';\nimport { useStyles } from './Style';\nimport './index.css';\nimport { db, useAuth } from './firebase';\nimport { collection, addDoc, getDocs, doc, updateDoc } from 'firebase/firestore';\nimport { typography } from '@mui/system';\nimport { Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction createData(Username, Ratings) {\n  return {\n    Username,\n    Ratings\n  };\n} // const rows = [\n//   createData('Suzit Paudel', 'Good'),\n//   createData('Subrat Regmi', 'Excellent'),\n//   createData('Rajesh Rai', 'Bad'),\n//   createData('Sujan Khadka', 'Poor'),\n//   createData('Sagar Thapa', 'Ok'),\n// ];\n\n\nexport default function BasicTable() {\n  _s();\n\n  const Useless = \"⭐️\";\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  const [users, setUsers] = React.useState([]);\n  const usersCollectionRef = collection(db, \"Rating\"); //collecting datas from database from firebase to display \n\n  React.useEffect(() => {\n    const getUsers = async () => {\n      const data = await getDocs(usersCollectionRef);\n      setUsers(data.docs.map(docs => ({ ...docs.data(),\n        id: docs.id\n      })));\n    };\n\n    getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.movieRatings,\n        children: \"\\u2B50\\uFE0F\\u2B50\\uFE0F MOVIE RATINGS \\u2B50\\uFE0F\\u2B50\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        style: {\n          borderRadius: '25px',\n          backgroundColor: 'black'\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 1000\n          },\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  color: 'red',\n                  fontSize: '25px'\n                },\n                children: \"USERNAME\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                style: {\n                  color: 'red',\n                  fontSize: '25px'\n                },\n                children: \"RATING\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: users.filter(row => row.MovieId == id).map((row, ind) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                style: {\n                  color: 'white',\n                  fontSize: '15px'\n                },\n                children: row.UserId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                style: {\n                  color: 'gold',\n                  fontSize: '20px'\n                },\n                children: row.Rating == 'Useless' ? /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"\\u2B50\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 44\n                }, this) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 15\n              }, this)]\n            }, row.MovieId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n\n_s(BasicTable, \"YMwqshvXB80n6Ax8GEX8ljxgK/U=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/Users/suzitpaudel/Desktop/Movieapp/src/Ratingdatabase.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useParams","useStyles","db","useAuth","collection","addDoc","getDocs","doc","updateDoc","typography","Typography","createData","Username","Ratings","BasicTable","Useless","classes","id","users","setUsers","useState","usersCollectionRef","useEffect","getUsers","data","docs","map","movieRatings","borderRadius","backgroundColor","minWidth","color","fontSize","filter","row","MovieId","ind","UserId","Rating"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { useParams } from 'react-router';\nimport { useStyles } from './Style';\nimport './index.css'\n\n\n\n\nimport { db, useAuth } from './firebase';\nimport {collection, addDoc, getDocs,doc,updateDoc} from 'firebase/firestore';\nimport { typography } from '@mui/system';\nimport { Typography } from '@mui/material';\n\n\n\nfunction createData(Username, Ratings ) {\n  return { Username, Ratings };\n}\n\n// const rows = [\n//   createData('Suzit Paudel', 'Good'),\n//   createData('Subrat Regmi', 'Excellent'),\n//   createData('Rajesh Rai', 'Bad'),\n//   createData('Sujan Khadka', 'Poor'),\n//   createData('Sagar Thapa', 'Ok'),\n// ];\n\nexport default function BasicTable() {\n\n\n    const Useless = \"⭐️\"\n\n    \n\n\n    const classes = useStyles();\n\n    const {id} = useParams();\n\n    const [users ,setUsers]= React.useState([]); \n\n    const usersCollectionRef = collection(db, \"Rating\")   //collecting datas from database from firebase to display \n\n    React.useEffect(()=>{\n\n        const getUsers = async()=>{\n            const data = await getDocs(usersCollectionRef)\n            setUsers(data.docs.map((docs)=>({...docs.data(),id : docs.id})))\n\n        \n\n        }\n        getUsers();\n        },[]);\n\n\n  return (\n<>\n  <div>\n      <h1 className = {classes.movieRatings}>⭐️⭐️ MOVIE RATINGS ⭐️⭐️</h1>\n  \n    <TableContainer component={Paper} style = {{borderRadius : '25px', backgroundColor : 'black'}}>\n      <Table sx={{ minWidth: 1000 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell style = {{color : 'red', fontSize : '25px'}}>USERNAME</TableCell>\n            <TableCell align=\"right\" style = {{color : 'red',fontSize : '25px'}}>RATING</TableCell>\n            \n          </TableRow>\n        </TableHead>\n        <TableBody >\n        \n          {users.filter(row => row.MovieId == id ).map((row,ind) => (\n\n            <TableRow  \n              key={row.MovieId}\n            //   sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n          \n              <TableCell component=\"th\" scope=\"row\" style = {{color : 'white', fontSize : '15px'}}>\n                {row.UserId}\n              </TableCell>\n              <TableCell align=\"right\" style = {{color : 'gold', fontSize : '20px'}}>\n              {\n                  row.Rating == 'Useless'? <h1>⭐️</h1> : null\n              }\n                  </TableCell>\n              {/* <TableCell align=\"right\">{row.MovieId}</TableCell> */}\n             \n            </TableRow> \n          \n          ))}\n        </TableBody>\n\n\n        \n      </Table>\n    </TableContainer> \n    </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}