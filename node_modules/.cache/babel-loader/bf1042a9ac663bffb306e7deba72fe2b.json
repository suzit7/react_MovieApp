{"ast":null,"code":"var _jsxFileName = \"/Users/suzitpaudel/Desktop/Movieapp/src/Ratingdatabase.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useParams } from \"react-router\";\nimport { useStyles } from \"./Style\";\nimport \"./index.css\";\nimport { db, useAuth } from \"./firebase\";\nimport { collection, addDoc, getDocs, doc, updateDoc } from \"firebase/firestore\";\nimport { typography } from \"@mui/system\";\nimport { Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction createData(Username, Ratings) {\n  return {\n    Username,\n    Ratings\n  };\n} // const rows = [\n//   createData('Suzit Paudel', 'Good'),\n//   createData('Subrat Regmi', 'Excellent'),\n//   createData('Rajesh Rai', 'Bad'),\n//   createData('Sujan Khadka', 'Poor'),\n//   createData('Sagar Thapa', 'Ok'),\n// ];\n\n\nexport default function BasicTable() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  const [users, setUsers] = React.useState([]);\n  const usersCollectionRef = collection(db, \"Rating\"); //collecting datas from database from firebase to display\n\n  React.useEffect(() => {\n    const getUsers = async () => {\n      const data = await getDocs(usersCollectionRef);\n      setUsers(data.docs.map(docs => ({ ...docs.data(),\n        id: docs.id\n      })));\n    };\n\n    getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.movieRatings,\n        children: \"\\u2B50\\uFE0F\\u2B50\\uFE0F MOVIE RATINGS \\u2B50\\uFE0F\\u2B50\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        style: {\n          borderRadius: \"25px\",\n          backgroundColor: \"black\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 1000\n          },\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  color: \"red\",\n                  fontSize: \"25px\"\n                },\n                children: \"USERNAME\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                style: {\n                  color: \"red\",\n                  fontSize: \"25px\"\n                },\n                children: \"RATING\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: users.filter(row => row.MovieId == id).map((row, ind) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                style: {\n                  color: \"white\",\n                  fontSize: \"15px\"\n                },\n                children: row.UserId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                style: {\n                  color: \"gold\",\n                  fontSize: \"20px\"\n                },\n                children: [row.Rating == \"Useless\" ? /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"\\u2B50\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 50\n                }, this) : null, row.Rating == \"Poor\" ? /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"\\u2B50\\uFE0F\\u2B50\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 47\n                }, this) : null, row.Rating == \"Ok\" ? /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"\\u2B50\\uFE0F\\u2B50\\uFE0F\\u2B50\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 45\n                }, this) : null, row.Rating == \"Good\" ? /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"\\u2B50\\uFE0F\\u2B50\\uFE0F\\u2B50\\uFE0F\\u2B50\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 47\n                }, this) : null, row.Rating == \"Excellent\" ? /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"\\u2B50\\uFE0F\\u2B50\\uFE0F\\u2B50\\uFE0F\\u2B50\\uFE0F\\u2B50\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 25\n                }, this) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)]\n            }, row.MovieId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(BasicTable, \"yccZ8XQEauKo+3XXLFbPoW5KVgs=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/Users/suzitpaudel/Desktop/Movieapp/src/Ratingdatabase.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useParams","useStyles","db","useAuth","collection","addDoc","getDocs","doc","updateDoc","typography","Typography","createData","Username","Ratings","BasicTable","classes","id","users","setUsers","useState","usersCollectionRef","useEffect","getUsers","data","docs","map","movieRatings","borderRadius","backgroundColor","minWidth","color","fontSize","filter","row","MovieId","ind","UserId","Rating"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { useParams } from \"react-router\";\nimport { useStyles } from \"./Style\";\nimport \"./index.css\";\n\nimport { db, useAuth } from \"./firebase\";\nimport {\n  collection,\n  addDoc,\n  getDocs,\n  doc,\n  updateDoc,\n} from \"firebase/firestore\";\nimport { typography } from \"@mui/system\";\nimport { Typography } from \"@mui/material\";\n\nfunction createData(Username, Ratings) {\n  return { Username, Ratings };\n}\n\n// const rows = [\n//   createData('Suzit Paudel', 'Good'),\n//   createData('Subrat Regmi', 'Excellent'),\n//   createData('Rajesh Rai', 'Bad'),\n//   createData('Sujan Khadka', 'Poor'),\n//   createData('Sagar Thapa', 'Ok'),\n// ];\n\nexport default function BasicTable() {\n  const classes = useStyles();\n\n  const { id } = useParams();\n\n  const [users, setUsers] = React.useState([]);\n\n  const usersCollectionRef = collection(db, \"Rating\"); //collecting datas from database from firebase to display\n\n  React.useEffect(() => {\n    const getUsers = async () => {\n      const data = await getDocs(usersCollectionRef);\n      setUsers(data.docs.map((docs) => ({ ...docs.data(), id: docs.id })));\n    };\n    getUsers();\n  }, []);\n\n  return (\n    <>\n      <div>\n        <h1 className={classes.movieRatings}>⭐️⭐️ MOVIE RATINGS ⭐️⭐️</h1>\n\n        <TableContainer\n          component={Paper}\n          style={{ borderRadius: \"25px\", backgroundColor: \"black\" }}\n        >\n          <Table sx={{ minWidth: 1000 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell style={{ color: \"red\", fontSize: \"25px\" }}>\n                  USERNAME\n                </TableCell>\n                <TableCell\n                  align=\"right\"\n                  style={{ color: \"red\", fontSize: \"25px\" }}\n                >\n                  RATING\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {users\n                .filter((row) => row.MovieId == id)\n                .map((row, ind) => (\n                  <TableRow\n                    key={row.MovieId}\n                    //   sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                  >\n                    <TableCell\n                      component=\"th\"\n                      scope=\"row\"\n                      style={{ color: \"white\", fontSize: \"15px\" }}\n                    >\n                      {row.UserId}\n                    </TableCell>\n                    <TableCell\n                      align=\"right\"\n                      style={{ color: \"gold\", fontSize: \"20px\" }}\n                    >\n                      {row.Rating == \"Useless\" ? <h4>⭐️</h4> : null}\n\n                      {row.Rating == \"Poor\" ? <h4>⭐️⭐️</h4> : null}\n\n                      {row.Rating == \"Ok\" ? <h4>⭐️⭐️⭐️</h4> : null}\n\n                      {row.Rating == \"Good\" ? <h4>⭐️⭐️⭐️⭐️</h4> : null}\n\n                      {row.Rating == \"Excellent\" ? (\n                        <h4>⭐️⭐️⭐️⭐️⭐️</h4>\n                      ) : null}\n                    </TableCell>\n                    {/* <TableCell align=\"right\">{row.MovieId}</TableCell> */}\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}