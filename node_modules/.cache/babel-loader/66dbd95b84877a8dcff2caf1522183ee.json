{"ast":null,"code":"var _jsxFileName = \"/Users/suzitpaudel/Desktop/Movieapp/src/Reviewcomp.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Rating from '@mui/material/Rating';\nimport Box from '@mui/material/Box';\nimport StarIcon from '@mui/icons-material/Star'; // import { Button } from '@mui/material';\n\nimport { db, useAuth } from './firebase';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { useStyles } from './Style';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadPostStart, loadPostSuccess } from './actions';\nimport { Button } from '@mui/material';\nimport { useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst labels = {\n  0.5: 'Useless',\n  1: 'Useless+',\n  1.5: 'Poor',\n  2: 'Poor+',\n  2.5: 'Ok',\n  3: 'Ok+',\n  3.5: 'Good',\n  4: 'Good+',\n  4.5: 'Excellent',\n  5: 'Excellent+'\n};\nexport default function HoverRating() {\n  _s();\n\n  const {\n    id,\n    Title\n  } = useParams();\n  const currentUser = useAuth();\n  const stateapi = useSelector(state => state.apiCallReducers.posts);\n  console.log(stateapi);\n  const [value, setValue] = React.useState(2);\n  const [hover, setHover] = React.useState(-1);\n  const [rate, setRate] = React.useState('');\n  const userCollectionRef = collection(db, \"Rating\");\n\n  const giveRating = async () => {\n    await addDoc(userCollectionRef, {\n      UserId: currentUser === null || currentUser === void 0 ? void 0 : currentUser.email,\n      MovieId: id,\n      Rating: labels[value]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: 200,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'white',\n        marginLeft: '-50px',\n        marginTop: '-30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Rating, {\n        name: \"hover-feedback\",\n        value: value,\n        precision: 0.5,\n        onChange: (event, newValue) => {\n          setValue(newValue);\n        },\n        onChangeActive: (event, newHover) => {\n          setHover(newHover);\n        },\n        emptyIcon: /*#__PURE__*/_jsxDEV(StarIcon, {\n          style: {\n            opacity: 0.55\n          },\n          fontSize: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), value !== null && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ml: 1\n        },\n        children: labels[hover !== -1 ? hover : value]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        style: {\n          color: 'white',\n          marginLeft: '20px',\n          backgroundColor: 'red'\n        },\n        onClick: giveRating,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this), Title]\n  }, void 0, true);\n}\n\n_s(HoverRating, \"mESvrWG4NwKq9axVIgowONjnZxY=\", false, function () {\n  return [useParams, useAuth, useSelector];\n});\n\n_c = HoverRating;\n\nvar _c;\n\n$RefreshReg$(_c, \"HoverRating\");","map":{"version":3,"sources":["/Users/suzitpaudel/Desktop/Movieapp/src/Reviewcomp.js"],"names":["React","Rating","Box","StarIcon","db","useAuth","collection","addDoc","useStyles","useDispatch","useSelector","loadPostStart","loadPostSuccess","Button","useParams","labels","HoverRating","id","Title","currentUser","stateapi","state","apiCallReducers","posts","console","log","value","setValue","useState","hover","setHover","rate","setRate","userCollectionRef","giveRating","UserId","email","MovieId","width","display","alignItems","color","marginLeft","marginTop","event","newValue","newHover","opacity","ml","backgroundColor"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Rating from '@mui/material/Rating';\nimport Box from '@mui/material/Box';\nimport StarIcon from '@mui/icons-material/Star';\n// import { Button } from '@mui/material';\nimport { db, useAuth } from './firebase';\nimport {collection, addDoc} from 'firebase/firestore';\nimport { useStyles } from './Style';\n\n\nimport { useDispatch,useSelector } from \"react-redux\";\nimport { loadPostStart, loadPostSuccess } from './actions';\nimport { Button } from '@mui/material';\nimport { useParams } from 'react-router';\n\n\n\n\n\n\n\n\n\n\n\n\nconst labels = {\n  0.5: 'Useless',\n  1: 'Useless+',\n  1.5: 'Poor',\n  2: 'Poor+',\n  2.5: 'Ok',\n  3: 'Ok+',\n  3.5: 'Good',\n  4: 'Good+',\n  4.5: 'Excellent',\n  5: 'Excellent+',\n};\n\nexport default function HoverRating() {\n\n  const {id, Title} = useParams();\n    \n    const currentUser = useAuth();\n    \n const stateapi = useSelector((state) => state.apiCallReducers.posts)\n\n\n \n\n \nconsole.log(stateapi);\n\n  \n  const [value, setValue] = React.useState(2);\n  const [hover, setHover] = React.useState(-1);\n\n\n  const [rate,setRate] = React.useState('');\n\n  const userCollectionRef = collection(db,\"Rating\")\n\n\n  const giveRating = async()=>{\n      await addDoc(userCollectionRef,{UserId : currentUser?.email, MovieId : id, Rating : labels[value]})\n  }\n\n\n\n  return (\n      <>\n{/* <h1>{currentUser}</h1> */}\n{/* {stateapi.map((ele,id)=>{\n    return(\n        <>\n        <h2>{ele.Title}</h2>\n        </>\n    );\n})} */}\n\n    \n    <Box\n      sx={{\n        width: 200,\n        display: 'flex',\n        alignItems: 'center',\n        color : 'white',\n        marginLeft : '-50px',\n        marginTop : '-30px'\n      }}\n    >\n\n    \n   \n      <Rating\n        name=\"hover-feedback\"\n        value={value}\n        precision={0.5}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n         \n        }}\n        onChangeActive={(event, newHover) => {\n          setHover(newHover);\n        }}\n        \n        emptyIcon={<StarIcon style={{ opacity: 0.55 }} fontSize=\"inherit\" />}\n        \n      />\n     \n     {value !== null && (\n        <Box sx={{ ml: 1 }}>{labels[hover !== -1 ? hover : value]}</Box>\n      )}\n      <Button variant = 'outlined' style={{color : 'white', marginLeft : '20px', backgroundColor : 'red'}} onClick={giveRating}>Submit</Button>\n    </Box>\n\n{Title}\n\n   \n    \n    \n    {/* <input type = \"text\" placeholder = \"review\"\n    onChange = {(e)=>{setRate(e.target.value)}}\n  /> */}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}