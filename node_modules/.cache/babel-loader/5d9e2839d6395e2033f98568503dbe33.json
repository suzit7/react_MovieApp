{"ast":null,"code":"var _jsxFileName = \"/Users/suzitpaudel/Desktop/Movieapp/src/Test.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport React from \"react\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { moviedetailsreducers } from \"./reducers/moviereducers\";\nimport { loadDetails } from \"./actions\";\nimport Details from \"./Details\";\nimport Details2 from \"./Details2\";\nimport { Typography } from \"@mui/material\";\nimport { useStyles } from \"./Style\";\nimport ImgMediaCard from \"./Card\";\nimport CircularIndeterminate from \"./Spinner\";\nimport Spinner from \"./Spinner\";\nimport Ratingdatabase from \"./Ratingdatabase\"; // import CircularIndeterminate from \"./Spinner\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Test = () => {\n  _s();\n\n  const search = useSelector(state => state.apiCallReducers);\n  const [loading, setLoading] = React.useState(false);\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch(); // console.log(id)\n\n  const post = useSelector(state => state.moviedetailsreducers); // const{Title,Genre}=post;\n  // const fetchDetails = async() =>{\n  //     const response = await axios.get(`https://www.omdbapi.com/?i=${id}&apikey=900505d8`).catch(err =>{\n  //         console.log(\"Err\", err);\n  //     })\n\n  const url = `https://www.omdbapi.com/?i=${id}&apikey=900505d8`; // const urll = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n\n  useEffect(() => {\n    async function fetchData() {\n      setLoading(true);\n\n      try {\n        const res = await fetch(url);\n        const data = await res.json();\n        console.log(data);\n        dispatch(loadDetails(data));\n      } catch (err) {\n        console.error(err); // alert('No Movies Found')\n      }\n    }\n\n    fetchData();\n  }, []);\n  React.useEffect(() => {\n    const getUsers = async () => {\n      const data = await getDocs(usersCollectionRef);\n      setUsers(data.docs.map(docs => ({ ...docs.data(),\n        id: docs.id\n      })));\n    };\n\n    getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px',\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        style: {\n          textDecoration: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          color: \"red\",\n          children: \"NEPFLIX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 89\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        color: \"red\",\n        style: {\n          marginTop: '15px'\n        },\n        children: \"MOVIE DETAILS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'black',\n        borderRadius: '50px',\n        marginTop: '30px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundImage: \"url(images/bg.jpeg)\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Details2, {\n          title: post.Title,\n          genre: post.Genre,\n          released: post.Released,\n          actors: post.Actors,\n          image: post.Poster,\n          plot: post.Plot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 1\n    }, this), id, /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: classes.footer,\n      style: {\n        marginTop: '41px'\n      },\n      children: \"All Rights Reserved @2021\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Test, \"x226ImyHUwP8mfnGqUyS4gH5BAE=\", false, function () {\n  return [useSelector, useStyles, useParams, useDispatch, useSelector];\n});\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/suzitpaudel/Desktop/Movieapp/src/Test.js"],"names":["axios","useEffect","React","NavLink","useParams","useDispatch","useSelector","moviedetailsreducers","loadDetails","Details","Details2","Typography","useStyles","ImgMediaCard","CircularIndeterminate","Spinner","Ratingdatabase","Test","search","state","apiCallReducers","loading","setLoading","useState","classes","id","dispatch","post","url","fetchData","res","fetch","data","json","console","log","err","error","getUsers","getDocs","usersCollectionRef","setUsers","docs","map","marginTop","display","justifyContent","textDecoration","backgroundColor","borderRadius","backgroundImage","Title","Genre","Released","Actors","Poster","Plot","footer"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport React from \"react\";\nimport { NavLink, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { moviedetailsreducers } from \"./reducers/moviereducers\";\nimport { loadDetails } from \"./actions\";\nimport Details from \"./Details\";\nimport Details2 from \"./Details2\";\nimport { Typography } from \"@mui/material\";\nimport { useStyles } from \"./Style\";\nimport ImgMediaCard from \"./Card\";\nimport CircularIndeterminate from \"./Spinner\";\nimport Spinner from \"./Spinner\";\nimport Ratingdatabase from \"./Ratingdatabase\";\n// import CircularIndeterminate from \"./Spinner\";\n\n\nconst Test = ()=>{\n\n    \n\n    const search = useSelector((state)=>state.apiCallReducers);\n\n\n    const [loading,setLoading] = React.useState(false);\n\nconst classes = useStyles();\n    const {id} = useParams();\n    const dispatch = useDispatch();\n    // console.log(id)\n    const post = useSelector((state)=>state.moviedetailsreducers);\n\n \n\n    // const{Title,Genre}=post;\n\n    // const fetchDetails = async() =>{\n    //     const response = await axios.get(`https://www.omdbapi.com/?i=${id}&apikey=900505d8`).catch(err =>{\n    //         console.log(\"Err\", err);\n    //     })\n\n\n    const url = `https://www.omdbapi.com/?i=${id}&apikey=900505d8`\n\n    // const urll = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    useEffect( () => { \n\n\n        async function fetchData() {\n\nsetLoading(true)\n            try{\n\n    \n                const res = await fetch(url);\n                const data = await res.json();\n                console.log(data);\n                \n            \n                dispatch(loadDetails(data))\n               \n                }\n            catch(err){\n                console.error(err);\n                // alert('No Movies Found')\n            }\n            \n            \n        }\n        fetchData();\n    }, []);\n\n\n\n\n\n\n\n\n\n\n    React.useEffect(()=>{\n\n        const getUsers = async()=>{\n            const data = await getDocs(usersCollectionRef)\n            setUsers(data.docs.map((docs)=>({...docs.data(),id : docs.id})))\n\n        \n\n        }\n        getUsers();\n        },[]);\n    \n\n\n\n\n \n    return(\n        <>\n<div style={{ marginTop : '10px',display : 'flex', justifyContent : 'space-between' }}> <NavLink to = \"/\" style={{textDecoration : 'none'}}>\n  <Typography variant=\"h2\"  color =\"red\">\n    NEPFLIX\n    \n  </Typography></NavLink>\n  <Typography variant=\"h3\"  color =\"red\" style={{marginTop : '15px'}}>\n    MOVIE DETAILS\n  </Typography></div>\n\n  {/* <CircularIndeterminate/> */}\n  <div style = {{backgroundColor : 'black',borderRadius : '50px', marginTop : '30px'}}>\n  <div style = {{ backgroundImage: \"url(images/bg.jpeg)\"}}>\n       <Details2\n        title ={post.Title}\n        genre={post.Genre}\n        released ={post.Released}\n        actors={post.Actors}\n        image={post.Poster}\n        plot = {post.Plot}\n        \n        />\n   </div>          \n </div>\n\n <div>\n     {/* <Spinner/> */}\n </div>\n<br/>\n<br/>\n\n\n{/* <Ratingdatabase/> */}\n\n\n{id}\n\n\n\n\n\n<footer className = {classes.footer} style={{marginTop : '41px'}}>All Rights Reserved @2021</footer>\n        </>\n    );\n}\n\nexport default Test;"]},"metadata":{},"sourceType":"module"}