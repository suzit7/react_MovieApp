{"ast":null,"code":"var _jsxFileName = \"/Users/suzitpaudel/Desktop/Movieapp/src/Reviewcomp.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Rating from \"@mui/material/Rating\";\nimport Box from \"@mui/material/Box\";\nimport StarIcon from \"@mui/icons-material/Star\"; // import { Button } from '@mui/material';\n\nimport { db, useAuth } from \"./firebase\";\nimport { collection, addDoc, getDocs } from \"firebase/firestore\";\nimport { useStyles } from \"./Style\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadPostStart, loadPostSuccess } from \"./actions\";\nimport { Button } from \"@mui/material\";\nimport { useParams } from \"react-router\";\nimport { flexbox } from \"@mui/system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst labels = {\n  // 0.5: 'Useless',\n  1: \"Useless\",\n  // 1.5: 'Poor',\n  2: \"Poor\",\n  // 2.5: 'Ok',\n  3: \"Ok\",\n  // 3.5: 'Good',\n  4: \"Good\",\n  // 4.5: 'Excellent',\n  5: \"Excellent\"\n};\nexport default function HoverRating() {\n  _s();\n\n  const [loading, setLoading] = React.useState(false);\n  const {\n    id,\n    name\n  } = useParams();\n  const currentUser = useAuth();\n  const stateapi = useSelector(state => state.apiCallReducers.posts);\n  const [users, setUsers] = React.useState([]);\n  const usersCollectionRef = collection(db, \"Rating\"); //collecting datas from database from firebase to display\n\n  React.useEffect(() => {\n    const getUsers = async () => {\n      const data = await getDocs(usersCollectionRef);\n      setUsers(data.docs.map(docs => ({ ...docs.data(),\n        id: docs.id\n      })));\n    };\n\n    getUsers();\n  }, []);\n  console.log(stateapi);\n  const [value, setValue] = React.useState(2);\n  const [hover, setHover] = React.useState(-1);\n  const [rate, setRate] = React.useState(\"\");\n  const userCollectionRef = collection(db, \"Rating\");\n\n  const giveRating = async () => {\n    await addDoc(userCollectionRef, {\n      UserId: currentUser === null || currentUser === void 0 ? void 0 : currentUser.email,\n      MovieId: id,\n      Title: name,\n      Rating: labels[value]\n    });\n    setLoading(true);\n  }; //LOCAL STOGARE CODE--------------------------->\n\n\n  React.useEffect(() => {\n    const data = localStorage.getItem(\"rate\");\n\n    if (data) {\n      setValue(JSON.parse(data));\n      setHover(JSON.parse(data));\n    }\n  }, []);\n  React.useEffect(() => {\n    localStorage.setItem(\"rate\", JSON.stringify(value));\n  }); //LOCAL STORAGE CODE------------------------------>\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: 200,\n        display: \"flex\",\n        alignItems: \"center\",\n        color: \"white\",\n        marginLeft: \"-50px\",\n        marginTop: \"-30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Rating, {\n        name: \"hover-feedback\",\n        value: value,\n        precision: 1,\n        onChange: (event, newValue) => {\n          setValue(newValue);\n        },\n        onChangeActive: (event, newHover) => {\n          setHover(newHover);\n        },\n        onClick: (event, newHover) => {\n          setHover(newHover);\n        },\n        emptyIcon: /*#__PURE__*/_jsxDEV(StarIcon, {\n          style: {\n            opacity: 0.55\n          },\n          fontSize: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), value !== null && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ml: 1\n        },\n        children: labels[hover !== -1 ? hover : value]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: loading,\n        variant: \"outlined\",\n        style: {\n          color: \"white\",\n          marginLeft: \"20px\",\n          backgroundColor: \"red\"\n        },\n        onClick: giveRating,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            marginLeft: \"900px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), users.map((ele, id) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(HoverRating, \"mslJU+RiBe72ZKkaDjAuj8ikAFM=\", false, function () {\n  return [useParams, useAuth, useSelector];\n});\n\n_c = HoverRating;\n\nvar _c;\n\n$RefreshReg$(_c, \"HoverRating\");","map":{"version":3,"sources":["/Users/suzitpaudel/Desktop/Movieapp/src/Reviewcomp.js"],"names":["React","Rating","Box","StarIcon","db","useAuth","collection","addDoc","getDocs","useStyles","useDispatch","useSelector","loadPostStart","loadPostSuccess","Button","useParams","flexbox","labels","HoverRating","loading","setLoading","useState","id","name","currentUser","stateapi","state","apiCallReducers","posts","users","setUsers","usersCollectionRef","useEffect","getUsers","data","docs","map","console","log","value","setValue","hover","setHover","rate","setRate","userCollectionRef","giveRating","UserId","email","MovieId","Title","localStorage","getItem","JSON","parse","setItem","stringify","width","display","alignItems","color","marginLeft","marginTop","event","newValue","newHover","opacity","ml","backgroundColor","ele"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Rating from \"@mui/material/Rating\";\nimport Box from \"@mui/material/Box\";\nimport StarIcon from \"@mui/icons-material/Star\";\n// import { Button } from '@mui/material';\nimport { db, useAuth } from \"./firebase\";\nimport { collection, addDoc, getDocs } from \"firebase/firestore\";\nimport { useStyles } from \"./Style\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadPostStart, loadPostSuccess } from \"./actions\";\nimport { Button } from \"@mui/material\";\nimport { useParams } from \"react-router\";\nimport { flexbox } from \"@mui/system\";\n\nconst labels = {\n  // 0.5: 'Useless',\n  1: \"Useless\",\n  // 1.5: 'Poor',\n  2: \"Poor\",\n  // 2.5: 'Ok',\n  3: \"Ok\",\n  // 3.5: 'Good',\n  4: \"Good\",\n  // 4.5: 'Excellent',\n  5: \"Excellent\",\n};\n\nexport default function HoverRating() {\n  const [loading, setLoading] = React.useState(false);\n\n  const { id, name } = useParams();\n\n  const currentUser = useAuth();\n\n  const stateapi = useSelector((state) => state.apiCallReducers.posts);\n\n  const [users, setUsers] = React.useState([]);\n\n  const usersCollectionRef = collection(db, \"Rating\"); //collecting datas from database from firebase to display\n\n  React.useEffect(() => {\n    const getUsers = async () => {\n      const data = await getDocs(usersCollectionRef);\n      setUsers(data.docs.map((docs) => ({ ...docs.data(), id: docs.id })));\n    };\n    getUsers();\n  }, []);\n\n  console.log(stateapi);\n\n  const [value, setValue] = React.useState(2);\n  const [hover, setHover] = React.useState(-1);\n\n  const [rate, setRate] = React.useState(\"\");\n\n  const userCollectionRef = collection(db, \"Rating\");\n\n  const giveRating = async () => {\n    await addDoc(userCollectionRef, {\n      UserId: currentUser?.email,\n      MovieId: id,\n      Title: name,\n      Rating: labels[value],\n    });\n    setLoading(true);\n  };\n\n  //LOCAL STOGARE CODE--------------------------->\n\n  React.useEffect(() => {\n    const data = localStorage.getItem(\"rate\");\n    if (data) {\n      setValue(JSON.parse(data));\n      setHover(JSON.parse(data));\n    }\n  }, []);\n\n  React.useEffect(() => {\n    localStorage.setItem(\"rate\", JSON.stringify(value));\n  });\n\n  //LOCAL STORAGE CODE------------------------------>\n\n  return (\n    <>\n      {/* <h1>{currentUser}</h1> */}\n      {/* {stateapi.map((ele,id)=>{\n    return(\n        <>\n        <h2>{ele.Title}</h2>\n        </>\n    );\n})} */}\n\n      <Box\n        sx={{\n          width: 200,\n          display: \"flex\",\n          alignItems: \"center\",\n          color: \"white\",\n          marginLeft: \"-50px\",\n          marginTop: \"-30px\",\n        }}\n      >\n        <Rating\n          name=\"hover-feedback\"\n          value={value}\n          precision={1}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          onChangeActive={(event, newHover) => {\n            setHover(newHover);\n          }}\n          onClick={(event, newHover) => {\n            setHover(newHover);\n          }}\n          emptyIcon={<StarIcon style={{ opacity: 0.55 }} fontSize=\"inherit\" />}\n        />\n\n        {value !== null && (\n          <Box sx={{ ml: 1 }}>{labels[hover !== -1 ? hover : value]}</Box>\n        )}\n        <Button\n          disabled={loading}\n          variant=\"outlined\"\n          style={{ color: \"white\", marginLeft: \"20px\", backgroundColor: \"red\" }}\n          onClick={giveRating}\n        >\n          Submit\n        </Button>\n        <div>\n          <h1 style={{ marginLeft: \"900px\" }}>{}</h1>\n        </div>\n\n        {users.map((ele, id) => {\n          return (\n            <>\n              {/* <div style = {{color : 'black'}}>\n<h3>Rating : {ele.Rating}</h3>\n</div> */}\n            </>\n          );\n        })}\n      </Box>\n\n      <div></div>\n\n      {/* <input type = \"text\" placeholder = \"review\"\n    onChange = {(e)=>{setRate(e.target.value)}}\n  /> */}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}