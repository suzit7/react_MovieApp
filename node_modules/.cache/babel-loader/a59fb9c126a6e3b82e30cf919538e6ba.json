{"ast":null,"code":"var _jsxFileName = \"/Users/suzitpaudel/Desktop/Movieapp/src/Searchmovie.js\",\n    _s = $RefreshSig$();\n\n// import { Typography } from \"@mui/material\";\n// import { Typography } from \"@mui/material\";\n// import { ClassNames } from \"@emotion/react\";\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\"; // import Card from \"./Card\";\n\nimport { useStyles } from \"./Style\"; // import ImgMediaCard from \"./Card\";\n\nimport { Autocomplete, Button, TextField } from \"@mui/material\"; // import Details from \"./Details\";\n\nimport ImgMediaCard from \"./Card\";\nimport Details from \"./Details\";\nimport { useDispatch } from \"react-redux\";\nimport { loadPostSuccess } from \"./actions\";\nimport CircularIndeterminate from \"./Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst key = \"900505d8\";\n\nconst Searchform = () => {\n  _s();\n\n  const [loading, setLoading] = useState();\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, onMovieSelect] = useState();\n\n  const SearchMovies = async e => {\n    console.log(\"Submitted\"); // alert('submitted');\n\n    e.preventDefault();\n    const url = `http://www.omdbapi.com/?s=${query}&apikey=${key}`; // const urll = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    try {\n      setLoading(true);\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data);\n      setMovies(data.Search);\n      dispatch(loadPostSuccess(data.Search));\n    } catch (err) {\n      console.error(err); // alert('No Movies Found')\n    }\n\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: SearchMovies,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: classes.input,\n          id: \"filled-basic\",\n          variant: \"filled\",\n          placeholder: \"Search for movie...\",\n          autoComplete: \"off\",\n          value: query,\n          onChange: e => {\n            setQuery(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"error\",\n          className: classes.button,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.box,\n        children: movies === null || movies === void 0 ? void 0 : movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ImgMediaCard, {\n            movie: movie,\n            onMovieSelect: onMovieSelect,\n            image: movie.Poster,\n            title: movie.Title,\n            id: movie.imdbID\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: classes.footer,\n      children: \"All Rights Reserved @2021\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Searchform, \"KaJ/pRISuKBeoKXrtjlKlzZpU5c=\", false, function () {\n  return [useDispatch, useStyles];\n});\n\n_c = Searchform;\nexport default Searchform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Searchform\");","map":{"version":3,"sources":["/Users/suzitpaudel/Desktop/Movieapp/src/Searchmovie.js"],"names":["React","useEffect","useState","useStyles","Autocomplete","Button","TextField","ImgMediaCard","Details","useDispatch","loadPostSuccess","CircularIndeterminate","key","Searchform","loading","setLoading","dispatch","classes","query","setQuery","movies","setMovies","selectedMovie","onMovieSelect","SearchMovies","e","console","log","preventDefault","url","res","fetch","data","json","Search","err","error","form","input","target","value","button","box","map","movie","index","Poster","Title","imdbID","footer"],"mappings":"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","sourcesContent":["// import { Typography } from \"@mui/material\";\n// import { Typography } from \"@mui/material\";\n// import { ClassNames } from \"@emotion/react\";\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\n// import Card from \"./Card\";\nimport { useStyles } from \"./Style\";\n\n// import ImgMediaCard from \"./Card\";\nimport { Autocomplete, Button, TextField } from \"@mui/material\";\n// import Details from \"./Details\";\nimport ImgMediaCard from \"./Card\";\nimport Details from \"./Details\";\nimport { useDispatch } from \"react-redux\";\nimport { loadPostSuccess } from \"./actions\";\nimport CircularIndeterminate from \"./Spinner\";\n\nconst key = \"900505d8\";\n\nconst Searchform = () => {\n  const [loading, setLoading] = useState();\n\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n\n  const [selectedMovie, onMovieSelect] = useState();\n\n  const SearchMovies = async (e) => {\n    console.log(\"Submitted\");\n    // alert('submitted');\n    e.preventDefault();\n\n    const url = `http://www.omdbapi.com/?s=${query}&apikey=${key}`;\n\n    // const urll = `https://api.themoviedb.org/3/search/movie?api_key=5dcf7f28a88be0edc01bbbde06f024ab&language=en-US&query=${query}&page=1&include_adult=false`;\n\n    try {\n      setLoading(true);\n      const res = await fetch(url);\n      const data = await res.json();\n      console.log(data);\n      setMovies(data.Search);\n\n      dispatch(loadPostSuccess(data.Search));\n    } catch (err) {\n      console.error(err);\n      // alert('No Movies Found')\n    }\n    setLoading(false);\n  };\n\n  return (\n    <>\n      <div>\n        {/* style={{display: \"flex\",justifyContent:\"center\" ,marginTop: '10px'}} */}\n        <form className={classes.form} onSubmit={SearchMovies}>\n          {/* <label>NEPFLIX</label><br/> */}\n          <TextField\n            className={classes.input}\n            id=\"filled-basic\"\n            variant=\"filled\"\n            placeholder=\"Search for movie...\"\n            autoComplete=\"off\"\n            value={query}\n            onChange={(e) => {\n              setQuery(e.target.value);\n            }}\n          />\n          <br />\n          <Button variant=\"contained\" color=\"error\" className={classes.button}>\n            Search\n          </Button>\n        </form>\n        <br />\n        <br />\n      </div>\n      <div>\n        <div className={classes.box}>\n          {/* {movies.filter(movie=>movie.poster_path).map(movie => ( */}\n\n          {movies?.map((movie, index) => (\n            <div>\n              <ImgMediaCard\n                key={index}\n                movie={movie}\n                onMovieSelect={onMovieSelect}\n                image={movie.Poster}\n                title={movie.Title}\n                id={movie.imdbID}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* <div>\n        {selectedMovie && <Details \n        selectedMovie = {selectedMovie}/>}\n        </div> */}\n\n      <footer className={classes.footer}>All Rights Reserved @2021</footer>\n    </>\n  );\n};\n\nexport default Searchform;\n"]},"metadata":{},"sourceType":"module"}