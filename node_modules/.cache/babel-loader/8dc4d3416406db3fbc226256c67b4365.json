{"ast":null,"code":"var _s = $RefreshSig$();\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\"; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyActJsWz0PK1Cc18jD6gz1_BWqlw043Dxg\",\n  authDomain: \"nepflixapp-e7847.firebaseapp.com\",\n  projectId: \"nepflixapp-e7847\",\n  storageBucket: \"nepflixapp-e7847.appspot.com\",\n  messagingSenderId: \"639254711778\",\n  appId: \"1:639254711778:web:1e6e4e2a389986b4837dbb\"\n}; // Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(); // Authetication module\n\nexport const Signup = (email, password) => {\n  createUserWithEmailAndPassword(auth, email, password); //Creating signup function using auth module\n};\n_c = Signup;\nexport const Login = (email, password) => {\n  return signInWithEmailAndPassword(auth, email, password); //Creating signup function using auth module\n};\n_c2 = Login;\nexport function logout() {\n  return signOut(auth);\n} //custom hook\n\nexport const useAuth = () => {\n  _s();\n\n  const [currentUser, setCurrentuser] = useState();\n  useEffect(() => {\n    const unsub = onAuthStateChanged(auth, user => setCurrentuser(user));\n    return unsub;\n  }, []);\n  return currentUser;\n};\n\n_s(useAuth, \"TILA7SSChAKft7Ct88I5g/9ydno=\");\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Signup\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["/Users/suzitpaudel/Desktop/Movieapp/src/firebase.js"],"names":["initializeApp","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","getAuth","Signup","email","password","createUserWithEmailAndPassword","Login","signInWithEmailAndPassword","logout","signOut","useAuth","currentUser","setCurrentuser","useState","useEffect","unsub","onAuthStateChanged","user"],"mappings":";;AAAA;AACA,SAASA,aAAT,QAA8B,cAA9B,C,CACA;AACA;AAEA;;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,kCAFS;AAGrBC,EAAAA,SAAS,EAAE,kBAHU;AAIrBC,EAAAA,aAAa,EAAE,8BAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB,C,CASA;;AACA,MAAMC,GAAG,GAAGR,aAAa,CAACC,cAAD,CAAzB;AAEA,MAAMQ,IAAI,GAAGC,OAAO,EAApB,C,CAA0B;;AAE1B,OAAO,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAmB;AACrCC,EAAAA,8BAA8B,CAACL,IAAD,EAAMG,KAAN,EAAYC,QAAZ,CAA9B,CADqC,CACiB;AAEzD,CAHM;KAAMF,M;AAKb,OAAO,MAAMI,KAAK,GAAG,CAACH,KAAD,EAAQC,QAAR,KAAmB;AACpC,SAAOG,0BAA0B,CAACP,IAAD,EAAMG,KAAN,EAAYC,QAAZ,CAAjC,CADoC,CACqB;AAE5D,CAHM;MAAME,K;AAKb,OAAO,SAASE,MAAT,GAAiB;AACrB,SAAOC,OAAO,CAACT,IAAD,CAAd;AACF,C,CAED;;AAEA,OAAO,MAAMU,OAAO,GAAG,MAAI;AAAA;;AACvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCC,QAAQ,EAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACX,UAAMC,KAAK,GAAIC,kBAAkB,CAAChB,IAAD,EAAOiB,IAAI,IAAGL,cAAc,CAACK,IAAD,CAA5B,CAAjC;AACA,WAAOF,KAAP;AACF,GAHQ,EAGP,EAHO,CAAT;AAKA,SAAOJ,WAAP;AAGH,CAXM;;GAAMD,O","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyActJsWz0PK1Cc18jD6gz1_BWqlw043Dxg\",\n  authDomain: \"nepflixapp-e7847.firebaseapp.com\",\n  projectId: \"nepflixapp-e7847\",\n  storageBucket: \"nepflixapp-e7847.appspot.com\",\n  messagingSenderId: \"639254711778\",\n  appId: \"1:639254711778:web:1e6e4e2a389986b4837dbb\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nconst auth = getAuth();   // Authetication module\n\nexport const Signup = (email, password)=>{\n    createUserWithEmailAndPassword(auth,email,password);  //Creating signup function using auth module\n\n}\n\nexport const Login = (email, password)=>{\n    return signInWithEmailAndPassword(auth,email,password);  //Creating signup function using auth module\n\n}\n\nexport function logout(){\n   return signOut(auth);\n}\n\n//custom hook\n\nexport const useAuth = ()=>{\n    const [currentUser, setCurrentuser] = useState();\n\n    useEffect(()=>{\n       const unsub =  onAuthStateChanged(auth, user=> setCurrentuser(user));\n       return unsub;\n    },[])\n\n    return currentUser;\n\n\n}"]},"metadata":{},"sourceType":"module"}