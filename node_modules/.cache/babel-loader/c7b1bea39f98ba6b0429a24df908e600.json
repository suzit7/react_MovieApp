{"ast":null,"code":"var _jsxFileName = \"/Users/suzitpaudel/Desktop/Movieapp/src/Dialog.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\"; // import DialogContentText from '@mui/material/DialogContentText';\n\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport { useStyles } from \"./Style\"; // import { border, borderColor, fontFamily } from '@mui/system';\n\nimport ImageAvatars from \"./Avatar\";\nimport { logout, Signup } from \"./firebase\";\nimport { useRef } from \"react\";\nimport { useState } from \"react\";\nimport { useAuth } from \"./firebase\";\nimport { Login } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormDialog() {\n  _s();\n\n  const currentUser = useAuth();\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [loading, setLoading] = useState(false);\n\n  async function handleSignup() {\n    setLoading(true);\n\n    try {\n      await Signup(emailRef.current.value, passwordRef.current.value); // try catch not working\n    } catch (error) {\n      alert(\"error\");\n    }\n\n    setLoading(false);\n  }\n\n  async function handleLogin() {\n    setLoading(true);\n\n    try {\n      await Login(emailRef.current.value, passwordRef.current.value);\n    } catch (error) {\n      alert(\"Account not registered\");\n    }\n\n    setLoading(false);\n  }\n\n  async function handleLogout() {\n    setLoading(true);\n\n    try {\n      await logout();\n    } catch {\n      alert(\"error\");\n    }\n\n    setLoading(false);\n  }\n\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentUser !== null ? /*#__PURE__*/_jsxDEV(Button, {\n      className: classes.buttop,\n      variant: \"contained\",\n      color: \"error\",\n      onClick: handleLogout,\n      children: \"Sign Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      className: classes.buttop,\n      variant: \"contained\",\n      color: \"error\",\n      onClick: handleClickOpen,\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: \"red\",\n        size: \"20px\",\n        textDecoration: \"underline\"\n      },\n      children: [\" \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        className: classes.subscription // style={{fontSize : '25px' ,color : \"white\" ,textAlign : 'center', backgroundColor : 'red' ,fontFamily: 'Roboto' }}\n        ,\n        children: \"SUBSCRIPTION\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          inputRef: emailRef,\n          margin: \"dense\" // id=\"name\"\n          ,\n          label: \"Email Address\",\n          type: \"email\",\n          fullWidth: true,\n          variant: \"standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          inputRef: passwordRef,\n          margin: \"dense\" // id=\"name\"\n          ,\n          label: \"Password\",\n          type: \"password\",\n          fullWidth: true,\n          variant: \"standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          disabled: loading || currentUser != null,\n          onClick: handleSignup,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: loading || currentUser != null,\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: loading || !currentUser,\n          onClick: handleLogout,\n          children: [\"Logout\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormDialog, \"2EfDT4HLCdcvrrL1EKSC9yzE0aM=\", false, function () {\n  return [useAuth, useStyles];\n});\n\n_c = FormDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormDialog\");","map":{"version":3,"sources":["/Users/suzitpaudel/Desktop/Movieapp/src/Dialog.js"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","useStyles","ImageAvatars","logout","Signup","useRef","useState","useAuth","Login","FormDialog","currentUser","emailRef","passwordRef","loading","setLoading","handleSignup","current","value","error","alert","handleLogin","handleLogout","classes","open","setOpen","handleClickOpen","handleClose","buttop","color","size","textDecoration","email","subscription"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\n// import DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport { useStyles } from \"./Style\";\n// import { border, borderColor, fontFamily } from '@mui/system';\n\nimport ImageAvatars from \"./Avatar\";\n\nimport { logout, Signup } from \"./firebase\";\nimport { useRef } from \"react\";\nimport { useState } from \"react\";\nimport { useAuth } from \"./firebase\";\nimport { Login } from \"./firebase\";\n\nexport default function FormDialog() {\n  const currentUser = useAuth();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n\n  const [loading, setLoading] = useState(false);\n\n  async function handleSignup() {\n    setLoading(true);\n    try {\n      await Signup(emailRef.current.value, passwordRef.current.value); // try catch not working\n    } catch (error) {\n      alert(\"error\");\n    }\n    setLoading(false);\n  }\n\n  async function handleLogin() {\n    setLoading(true);\n    try {\n      await Login(emailRef.current.value, passwordRef.current.value);\n    } catch (error) {\n      alert(\"Account not registered\");\n    }\n    setLoading(false);\n  }\n\n  async function handleLogout() {\n    setLoading(true);\n    try {\n      await logout();\n    } catch {\n      alert(\"error\");\n    }\n    setLoading(false);\n  }\n\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      {/* <Button variant=\"outlined\" onClick={handleClickOpen}>\n        Open form dialog\n      </Button> */}\n\n      {currentUser !== null ? (\n        <Button\n          className={classes.buttop}\n          variant=\"contained\"\n          color=\"error\"\n          onClick={handleLogout}\n        >\n          Sign Out\n        </Button>\n      ) : (\n        <Button\n          className={classes.buttop}\n          variant=\"contained\"\n          color=\"error\"\n          onClick={handleClickOpen}\n        >\n          Sign In\n        </Button>\n      )}\n\n      {/* <Button className={classes.buttop} variant = \"contained\" color = \"error\" \n      onClick={handleClickOpen}>Sign In</Button> */}\n\n      {/*      \n        <Button className={classes.buttop} variant = \"contained\" color = \"error\" \n      onClick={handleClickOpen}>Sign Out</Button> */}\n\n      <h3 style={{ color: \"red\", size: \"20px\", textDecoration: \"underline\" }}>\n        {\" \"}\n        {currentUser?.email}\n      </h3>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle\n          className={classes.subscription}\n          // style={{fontSize : '25px' ,color : \"white\" ,textAlign : 'center', backgroundColor : 'red' ,fontFamily: 'Roboto' }}\n        >\n          SUBSCRIPTION\n        </DialogTitle>\n        <DialogContent>\n          {/* <DialogContentText>\n            To subscribe to this website, please enter your email address here. We\n            will send updates occasionally.\n          </DialogContentText> */}\n          <TextField\n            autoFocus\n            inputRef={emailRef}\n            margin=\"dense\"\n            // id=\"name\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n            variant=\"standard\"\n          />\n          <TextField\n            inputRef={passwordRef}\n            margin=\"dense\"\n            // id=\"name\"\n            label=\"Password\"\n            type=\"password\"\n            fullWidth\n            variant=\"standard\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            disabled={loading || currentUser != null}\n            onClick={handleSignup}\n          >\n            Register\n          </Button>\n          <Button\n            disabled={loading || currentUser != null}\n            onClick={handleLogin}\n          >\n            Login\n          </Button>\n          <Button disabled={loading || !currentUser} onClick={handleLogout}>\n            Logout{\" \"}\n          </Button>\n\n          {/* <Button onClick={handleClose}>Cancel</Button> */}\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}