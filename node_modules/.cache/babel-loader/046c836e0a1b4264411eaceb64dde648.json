{"ast":null,"code":"var _jsxFileName = \"/Users/suzitpaudel/Desktop/Movieapp/src/Ratingdatabase.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { useParams } from 'react-router';\nimport { useStyles } from './Style';\nimport './index.css';\nimport { db, useAuth } from './firebase';\nimport { collection, addDoc, getDocs, doc, updateDoc } from 'firebase/firestore';\nimport { typography } from '@mui/system';\nimport { Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction createData(Username, Ratings) {\n  return {\n    Username,\n    Ratings\n  };\n} // const rows = [\n//   createData('Suzit Paudel', 'Good'),\n//   createData('Subrat Regmi', 'Excellent'),\n//   createData('Rajesh Rai', 'Bad'),\n//   createData('Sujan Khadka', 'Poor'),\n//   createData('Sagar Thapa', 'Ok'),\n// ];\n\n\nexport default function BasicTable() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  const [users, setUsers] = React.useState([]);\n  const usersCollectionRef = collection(db, \"Rating\"); //collecting datas from database from firebase to display \n\n  React.useEffect(() => {\n    const getUsers = async () => {\n      const data = await getDocs(usersCollectionRef);\n      setUsers(data.docs.map(docs => ({ ...docs.data(),\n        id: docs.id\n      })));\n    };\n\n    getUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.movieRatings,\n      children: \"Movie Ratingsss\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 1000\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                color: 'red',\n                fontFamily: 'sans-serif'\n              },\n              children: \"USERNAME\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              style: {\n                color: 'red'\n              },\n              children: \"RATING\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: users.filter(row => row.MovieId == id).map((row, ind) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.UserId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.Rating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, row.MovieId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(BasicTable, \"YMwqshvXB80n6Ax8GEX8ljxgK/U=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/Users/suzitpaudel/Desktop/Movieapp/src/Ratingdatabase.js"],"names":["React","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useParams","useStyles","db","useAuth","collection","addDoc","getDocs","doc","updateDoc","typography","Typography","createData","Username","Ratings","BasicTable","classes","id","users","setUsers","useState","usersCollectionRef","useEffect","getUsers","data","docs","map","movieRatings","minWidth","color","fontFamily","filter","row","MovieId","ind","UserId","Rating"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { useParams } from 'react-router';\nimport { useStyles } from './Style';\nimport './index.css'\n\n\n\n\nimport { db, useAuth } from './firebase';\nimport {collection, addDoc, getDocs,doc,updateDoc} from 'firebase/firestore';\nimport { typography } from '@mui/system';\nimport { Typography } from '@mui/material';\n\n\n\nfunction createData(Username, Ratings ) {\n  return { Username, Ratings };\n}\n\n// const rows = [\n//   createData('Suzit Paudel', 'Good'),\n//   createData('Subrat Regmi', 'Excellent'),\n//   createData('Rajesh Rai', 'Bad'),\n//   createData('Sujan Khadka', 'Poor'),\n//   createData('Sagar Thapa', 'Ok'),\n// ];\n\nexport default function BasicTable() {\n\n\n    \n\n\n    const classes = useStyles();\n\n    const {id} = useParams();\n\n    const [users ,setUsers]= React.useState([]); \n\n    const usersCollectionRef = collection(db, \"Rating\")   //collecting datas from database from firebase to display \n\n    React.useEffect(()=>{\n\n        const getUsers = async()=>{\n            const data = await getDocs(usersCollectionRef)\n            setUsers(data.docs.map((docs)=>({...docs.data(),id : docs.id})))\n\n        \n\n        }\n        getUsers();\n        },[]);\n\n\n  return (\n<>\n\n  \n      <h1 className = {classes.movieRatings}>Movie Ratingsss</h1>\n  \n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 1000 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell style = {{color : 'red', fontFamily : 'sans-serif'}}>USERNAME</TableCell>\n            <TableCell align=\"right\" style = {{color : 'red'}}>RATING</TableCell>\n            \n          </TableRow>\n        </TableHead>\n        <TableBody>\n        \n          {users.filter(row => row.MovieId == id ).map((row,ind) => (\n             \n            <TableRow \n              key={row.MovieId}\n            //   sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n          \n              <TableCell component=\"th\" scope=\"row\">\n                {row.UserId}\n              </TableCell>\n              <TableCell align=\"right\">{row.Rating}</TableCell>\n              {/* <TableCell align=\"right\">{row.MovieId}</TableCell> */}\n             \n            </TableRow> \n          \n          ))}\n        </TableBody>\n\n\n        \n      </Table>\n    </TableContainer> \n   \n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}